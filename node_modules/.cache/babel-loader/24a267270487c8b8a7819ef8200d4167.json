{"ast":null,"code":"var _jsxFileName = \"/home/edilene/\\xC1rea de Trabalho/bootcamp/React_JS/desafio de projeto react JS/github-api/src/components/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from \"../../services/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          id: data.id,\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = username => {\n    api.get(`users/${username}/repos`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      setGithubState(prevState => ({ ...prevState,\n        repositories: data\n      }));\n    });\n  };\n\n  const getUserStarred = username => {\n    api.get(`users/${username}/starred`).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      setGithubState(prevState => ({ ...prevState,\n        starred: data\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(username => getUserRepos(username), []),\n    getUserStarred: useCallback(username => getUserStarred(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"z7LHoADw2O0ePOX6nn7cQIcxAKM=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","id","undefined","avatar","login","name","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","avatar_url","finally","getUserRepos","getUserStarred","contextValue"],"sources":["/home/edilene/Área de Trabalho/bootcamp/React_JS/desafio de projeto react JS/github-api/src/components/providers/github-provider.js"],"sourcesContent":["import React, {createContext, useCallback, useState} from 'react';\nimport api from \"../../services/api.js\";\n\nexport const GithubContext = createContext({\n    loading: false,\n    user: {},\n    repositories: [],\n    starred: []\n});\n\nconst GithubProvider = ({children}) => {\n    const [githubState, setGithubState] = useState({\n        hasUser: false,\n        loading: false,        \n        user: {\n            id: undefined,\n            avatar: undefined,\n            login: undefined,\n            name: undefined,\n            html_url: undefined,\n            blog: undefined,\n            company: undefined,\n            location: undefined,\n            followers: 0,\n            following: 0,\n            public_gists: 0,\n            public_repos: 0\n        },\n        repositories: [],\n        starred:[]\n    });\n\n    const getUser = (username) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          loading: !prevState.loading,\n        }));    \n        api\n          .get(`users/${username}`)\n          .then(({ data }) => {            \n            setGithubState((prevState) => ({\n              ...prevState,\n              hasUser: true,\n              user: {\n                id: data.id,\n                avatar: data.avatar_url,\n                login: data.login,\n                name: data.name,\n                html_url: data.html_url,\n                blog: data.blog,\n                company: data.company,\n                location: data.location,\n                followers: data.followers,\n                following: data.following,\n                public_gists: data.public_gists,\n                public_repos: data.public_repos,\n              },\n            }));\n          })\n          .finally(() => {\n            setGithubState((prevState) => ({\n              ...prevState,\n              loading: !prevState.loading,\n            }));\n          });\n      };\n    \n      const getUserRepos = (username) => {\n        api.get(`users/${username}/repos`).then(({ data }) => {          \n          setGithubState((prevState) => ({\n            ...prevState,\n            repositories: data,\n          }));\n        });\n      };\n    \n      const getUserStarred = (username) => {\n        api.get(`users/${username}/starred`).then(({ data }) => {        \n          setGithubState((prevState) => ({\n            ...prevState,\n            starred: data,\n          }));\n        });\n      };\n\n    const contextValue = {\n        githubState,\n        getUser: useCallback((username) => getUser(username), []),\n        getUserRepos: useCallback((username) => getUserRepos(username), []),\n        getUserStarred: useCallback((username) => getUserStarred(username), [])\n    }\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n        {children}\n    </GithubContext.Provider>\n  )\n}\n\nexport default GithubProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}