{"ast":null,"code":"var _jsxFileName = \"/home/edilene/\\xC1rea de Trabalho/bootcamp/React_JS/desafio de projeto react JS/github-api/src/components/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from \"../../services/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repo: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    api.get(`users/${username}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading,\n        hasUser: true,\n        user: {\n          id: data.id,\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repo: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = username => {\n    api.get(`users/${username}/repo`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      setGithubState(prevState => ({ ...prevState,\n        repositories: {\n          data\n        }\n      }));\n    });\n  };\n\n  const getUserStarred = username => {\n    api.get(`users/${username}/starred`).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      setGithubState(prevState => ({ ...prevState,\n        repositories: {\n          data\n        }\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(username => getUserRepos(username), []),\n    getUserStarred: useCallback(username => getUserStarred(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"vJe3OoYdomX0/zmHdR0VsTiiksg=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","id","undefined","avatar","login","name","html_url","blog","company","location","followers","following","public_gists","public_repo","getUser","username","get","then","data","prevState","avatar_url","public_repos","finally","getUserRepos","getUserStarred","contextValue"],"sources":["/home/edilene/Área de Trabalho/bootcamp/React_JS/desafio de projeto react JS/github-api/src/components/providers/github-provider.js"],"sourcesContent":["import React, {createContext, useCallback, useState} from 'react';\nimport api from \"../../services/api.js\";\n\nexport const GithubContext = createContext({\n    loading: false,\n    user: {},\n    repositories: [],\n    starred: []\n});\n\nconst GithubProvider = ({children}) => {\n    const [githubState, setGithubState] = useState({\n        hasUser: false,\n        loading: false,        \n        user: {\n            id: undefined,\n            avatar: undefined,\n            login: undefined,\n            name: undefined,\n            html_url: undefined,\n            blog: undefined,\n            company: undefined,\n            location: undefined,\n            followers: 0,\n            following: 0,\n            public_gists: 0,\n            public_repo: 0\n        },\n        repositories: [],\n        starred:[]\n    });\n\n    const getUser = (username) => {\n        api.get(`users/${username}`).then( ({ data }) => {\n                    setGithubState(prevState => ({\n                        ...prevState, \n                        loading: !prevState.loading,\n                        hasUser: true,\n                        user: { \n                                    id: data.id,\n                                    avatar: data.avatar_url,\n                                    login: data.login,\n                                    name: data.name,\n                                    html_url: data.html_url,\n                                    blog: data.blog,\n                                    company: data.company,\n                                    location: data.location,\n                                    followers: data.followers,\n                                    following: data.following,\n                                    public_gists: data.public_gists,\n                                    public_repo: data.public_repos\n                                }\n                        }));\n                 }).finally( () => {\n                    setGithubState(prevState => ({\n                        ...prevState, \n                        loading: !prevState.loading\n                    }));    \n                 });\n    }\n\n    const getUserRepos = (username) => {\n        api.get(`users/${username}/repo`).then( ({ data }) => {\n                    setGithubState(prevState => ({\n                        ...prevState, \n                        repositories: { \n                                data\n                                }\n                        }));\n            }); \n    }\n\n    const getUserStarred = (username) => {\n        api.get(`users/${username}/starred`).then( ({ data }) => {\n                    setGithubState(prevState => ({\n                        ...prevState, \n                        repositories: { \n                                data\n                                }\n                        }));\n            }); \n    }\n\n    const contextValue = {\n        githubState,\n        getUser: useCallback((username) => getUser(username), []),\n        getUserRepos: useCallback((username) => getUserRepos(username), []),\n        getUserStarred: useCallback((username) => getUserStarred(username), [])\n    }\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n        {children}\n    </GithubContext.Provider>\n  )\n}\n\nexport default GithubProvider;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC;EACvCK,OAAO,EAAE,KAD8B;EAEvCC,IAAI,EAAE,EAFiC;EAGvCC,YAAY,EAAE,EAHyB;EAIvCC,OAAO,EAAE;AAJ8B,CAAD,CAAnC;;AAOP,MAAMC,cAAc,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACnC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;IAC3CW,OAAO,EAAE,KADkC;IAE3CR,OAAO,EAAE,KAFkC;IAG3CC,IAAI,EAAE;MACFQ,EAAE,EAAEC,SADF;MAEFC,MAAM,EAAED,SAFN;MAGFE,KAAK,EAAEF,SAHL;MAIFG,IAAI,EAAEH,SAJJ;MAKFI,QAAQ,EAAEJ,SALR;MAMFK,IAAI,EAAEL,SANJ;MAOFM,OAAO,EAAEN,SAPP;MAQFO,QAAQ,EAAEP,SARR;MASFQ,SAAS,EAAE,CATT;MAUFC,SAAS,EAAE,CAVT;MAWFC,YAAY,EAAE,CAXZ;MAYFC,WAAW,EAAE;IAZX,CAHqC;IAiB3CnB,YAAY,EAAE,EAjB6B;IAkB3CC,OAAO,EAAC;EAlBmC,CAAD,CAA9C;;EAqBA,MAAMmB,OAAO,GAAIC,QAAD,IAAc;IAC1BzB,GAAG,CAAC0B,GAAJ,CAAS,SAAQD,QAAS,EAA1B,EAA6BE,IAA7B,CAAmC,SAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MACrCnB,cAAc,CAACoB,SAAS,KAAK,EACzB,GAAGA,SADsB;QAEzB3B,OAAO,EAAE,CAAC2B,SAAS,CAAC3B,OAFK;QAGzBQ,OAAO,EAAE,IAHgB;QAIzBP,IAAI,EAAE;UACMQ,EAAE,EAAEiB,IAAI,CAACjB,EADf;UAEME,MAAM,EAAEe,IAAI,CAACE,UAFnB;UAGMhB,KAAK,EAAEc,IAAI,CAACd,KAHlB;UAIMC,IAAI,EAAEa,IAAI,CAACb,IAJjB;UAKMC,QAAQ,EAAEY,IAAI,CAACZ,QALrB;UAMMC,IAAI,EAAEW,IAAI,CAACX,IANjB;UAOMC,OAAO,EAAEU,IAAI,CAACV,OAPpB;UAQMC,QAAQ,EAAES,IAAI,CAACT,QARrB;UASMC,SAAS,EAAEQ,IAAI,CAACR,SATtB;UAUMC,SAAS,EAAEO,IAAI,CAACP,SAVtB;UAWMC,YAAY,EAAEM,IAAI,CAACN,YAXzB;UAYMC,WAAW,EAAEK,IAAI,CAACG;QAZxB;MAJmB,CAAL,CAAV,CAAd;IAmBF,CApBV,EAoBYC,OApBZ,CAoBqB,MAAM;MACfvB,cAAc,CAACoB,SAAS,KAAK,EACzB,GAAGA,SADsB;QAEzB3B,OAAO,EAAE,CAAC2B,SAAS,CAAC3B;MAFK,CAAL,CAAV,CAAd;IAIF,CAzBV;EA0BH,CA3BD;;EA6BA,MAAM+B,YAAY,GAAIR,QAAD,IAAc;IAC/BzB,GAAG,CAAC0B,GAAJ,CAAS,SAAQD,QAAS,OAA1B,EAAkCE,IAAlC,CAAwC,SAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MAC1CnB,cAAc,CAACoB,SAAS,KAAK,EACzB,GAAGA,SADsB;QAEzBzB,YAAY,EAAE;UACNwB;QADM;MAFW,CAAL,CAAV,CAAd;IAMP,CAPL;EAQH,CATD;;EAWA,MAAMM,cAAc,GAAIT,QAAD,IAAc;IACjCzB,GAAG,CAAC0B,GAAJ,CAAS,SAAQD,QAAS,UAA1B,EAAqCE,IAArC,CAA2C,SAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MAC7CnB,cAAc,CAACoB,SAAS,KAAK,EACzB,GAAGA,SADsB;QAEzBzB,YAAY,EAAE;UACNwB;QADM;MAFW,CAAL,CAAV,CAAd;IAMP,CAPL;EAQH,CATD;;EAWA,MAAMO,YAAY,GAAG;IACjB3B,WADiB;IAEjBgB,OAAO,EAAE1B,WAAW,CAAE2B,QAAD,IAAcD,OAAO,CAACC,QAAD,CAAtB,EAAkC,EAAlC,CAFH;IAGjBQ,YAAY,EAAEnC,WAAW,CAAE2B,QAAD,IAAcQ,YAAY,CAACR,QAAD,CAA3B,EAAuC,EAAvC,CAHR;IAIjBS,cAAc,EAAEpC,WAAW,CAAE2B,QAAD,IAAcS,cAAc,CAACT,QAAD,CAA7B,EAAyC,EAAzC;EAJV,CAArB;EAOF,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEU,YAA/B;IAAA,UACK5B;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArFD;;GAAMD,c;;KAAAA,c;AAuFN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}